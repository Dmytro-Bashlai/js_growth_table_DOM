{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAErC,SAAS,gBAAgB,CAAC,QAAS,SAAU,CAAC,EAC5C,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,WAG1B,EAAU,EAAM,iBAAiB,CAAC,gBAAgB,CAExD,GAAK,EAIL,OAAQ,CAAA,GACN,KAAK,EAAO,OAAO,CAAC,eACd,EAAM,IAAI,CAAC,MAAM,CATR,KAUX,EAAM,iBAAiB,CAAC,MAAM,CAAC,EAAQ,SAAS,CAAC,CAAA,IACjD,EAAO,kBAAkB,CAAC,eAAe,CAAC,WAAY,KAX3C,KAcT,EAAM,IAAI,CAAC,MAAM,EACnB,EAAO,YAAY,CAAC,WAAY,IAGlC,KAEF,MAAK,EAAO,OAAO,CAAC,eACd,EAAM,IAAI,CAAC,MAAM,CAtBR,IAuBX,EAAQ,MAAM,GACd,EAAO,sBAAsB,CAAC,eAAe,CAAC,WAAY,KAxB/C,IA2BT,EAAM,IAAI,CAAC,MAAM,EACnB,EAAO,YAAY,CAAC,WAAY,IAGlC,KAEF,MAAK,EAAO,OAAO,CAAC,kBACb,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAyB,CAAzB,IAAM,EAAN,EAAA,KAAA,AACC,CAAA,EAAI,KAAK,CAAC,MAAM,CAlCT,KAmCT,EAAI,MAAM,CAAC,EAAI,gBAAgB,CAAC,SAAS,CAAC,CAAA,IAC1C,EAAO,kBAAkB,CAAC,eAAe,CAAC,WAAY,KApC7C,KAuCP,EAAI,KAAK,CAAC,MAAM,EAClB,EAAO,YAAY,CAAC,WAAY,GAEpC,C,C,M,E,CATK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAUL,KAEF,MAAK,EAAO,OAAO,CAAC,kBACb,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAyB,CAAzB,IAAM,EAAN,EAAA,KAAA,AACC,CAAA,EAAI,KAAK,CAAC,MAAM,CAhDT,IAiDT,EAAI,gBAAgB,CAAC,MAAM,GAC3B,EAAO,sBAAsB,CAAC,eAAe,CAAC,WAAY,KAlDjD,IAqDP,EAAI,KAAK,CAAC,MAAM,EAClB,EAAO,YAAY,CAAC,WAAY,GAEpC,C,C,M,E,CATK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAUL,KAEF,SACE,OAAO,CACX,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar field = document.querySelector(\".field\");\ndocument.addEventListener(\"click\", function(e) {\n    var button = e.target.closest(\".button\");\n    var minLimit = 2;\n    var maxLimit = 10;\n    var lastRow = field.firstElementChild.lastElementChild;\n    if (!button) return;\n    switch(true){\n        case button.matches(\".append-row\"):\n            if (field.rows.length < maxLimit) {\n                field.firstElementChild.append(lastRow.cloneNode(true));\n                button.nextElementSibling.removeAttribute(\"disabled\", \"\");\n            }\n            if (field.rows.length === maxLimit) button.setAttribute(\"disabled\", \"\");\n            break;\n        case button.matches(\".remove-row\"):\n            if (field.rows.length > minLimit) {\n                lastRow.remove();\n                button.previousElementSibling.removeAttribute(\"disabled\", \"\");\n            }\n            if (field.rows.length === minLimit) button.setAttribute(\"disabled\", \"\");\n            break;\n        case button.matches(\".append-column\"):\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = field.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var row = _step.value;\n                    if (row.cells.length < maxLimit) {\n                        row.append(row.lastElementChild.cloneNode(true));\n                        button.nextElementSibling.removeAttribute(\"disabled\", \"\");\n                    }\n                    if (row.cells.length === maxLimit) button.setAttribute(\"disabled\", \"\");\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            break;\n        case button.matches(\".remove-column\"):\n            var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n            try {\n                for(var _iterator1 = field.rows[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                    var row1 = _step1.value;\n                    if (row1.cells.length > minLimit) {\n                        row1.lastElementChild.remove();\n                        button.previousElementSibling.removeAttribute(\"disabled\", \"\");\n                    }\n                    if (row1.cells.length === minLimit) button.setAttribute(\"disabled\", \"\");\n                }\n            } catch (err) {\n                _didIteratorError1 = true;\n                _iteratorError1 = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                        _iterator1.return();\n                    }\n                } finally{\n                    if (_didIteratorError1) {\n                        throw _iteratorError1;\n                    }\n                }\n            }\n            break;\n        default:\n            return 0;\n    }\n});\n\n//# sourceMappingURL=index.8909bb4b.js.map\n","'use strict';\n\nconst field = document.querySelector('.field');\n\ndocument.addEventListener('click', function (e) {\n  const button = e.target.closest('.button');\n  const minLimit = 2;\n  const maxLimit = 10;\n  const lastRow = field.firstElementChild.lastElementChild;\n\n  if (!button) {\n    return;\n  }\n\n  switch (true) {\n    case button.matches('.append-row'):\n      if (field.rows.length < maxLimit) {\n        field.firstElementChild.append(lastRow.cloneNode(true));\n        button.nextElementSibling.removeAttribute('disabled', '');\n      }\n\n      if (field.rows.length === maxLimit) {\n        button.setAttribute('disabled', '');\n      }\n\n      break;\n\n    case button.matches('.remove-row'):\n      if (field.rows.length > minLimit) {\n        lastRow.remove();\n        button.previousElementSibling.removeAttribute('disabled', '');\n      }\n\n      if (field.rows.length === minLimit) {\n        button.setAttribute('disabled', '');\n      }\n\n      break;\n\n    case button.matches('.append-column'):\n      for (const row of field.rows) {\n        if (row.cells.length < maxLimit) {\n          row.append(row.lastElementChild.cloneNode(true));\n          button.nextElementSibling.removeAttribute('disabled', '');\n        }\n\n        if (row.cells.length === maxLimit) {\n          button.setAttribute('disabled', '');\n        }\n      }\n      break;\n\n    case button.matches('.remove-column'):\n      for (const row of field.rows) {\n        if (row.cells.length > minLimit) {\n          row.lastElementChild.remove();\n          button.previousElementSibling.removeAttribute('disabled', '');\n        }\n\n        if (row.cells.length === minLimit) {\n          button.setAttribute('disabled', '');\n        }\n      }\n      break;\n\n    default:\n      return 0;\n  }\n});\n"],"names":["field","document","querySelector","addEventListener","e","button","target","closest","lastRow","firstElementChild","lastElementChild","matches","rows","length","append","cloneNode","nextElementSibling","removeAttribute","setAttribute","remove","previousElementSibling","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","cells","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","row1"],"version":3,"file":"index.8909bb4b.js.map"}